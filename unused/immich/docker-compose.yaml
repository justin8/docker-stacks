version: "3.8"

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    command: ["start-server.sh"]
    logging:
      options:
        max-size: "500M"
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
    env_file:
      - .env
    user: ${PUID}:${PGID}
    depends_on:
      - redis
      - database
      - typesense
    restart: unless-stopped
    labels:
      - autoheal=true

  immich-microservices:
    container_name: immich_microservices
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    command: ["start-microservices.sh"]
    logging:
      options:
        max-size: "500M"
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - ./config/reverse-geocoding:/usr/src/app/.reverse-geocoding-dump
    env_file:
      - .env
    user: ${PUID}:${PGID}
    depends_on:
      - redis
      - database
      - typesense
      - immich-server
    restart: unless-stopped
    labels:
      - autoheal=true

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    logging:
      options:
        max-size: "500M"
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - ./config/model-cache:/cache
    env_file:
      - .env
    user: ${PUID}:${PGID}
    restart: unless-stopped
    labels:
      - autoheal=true

  immich-web:
    container_name: immich_web
    image: ghcr.io/immich-app/immich-web:${IMMICH_VERSION:-release}
    env_file:
      - .env
    logging:
      options:
        max-size: "500M"
    restart: unless-stopped
    labels:
      - autoheal=true

  typesense:
    container_name: immich_typesense
    image: typesense/typesense:0.24.0
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - TYPESENSE_DATA_DIR=/data
    logging:
      options:
        max-size: "500M"
    volumes:
      - ./config/tsdata:/data
    restart: unless-stopped
    user: ${PUID}:${PGID}
    labels:
      - autoheal=true

  redis:
    container_name: immich_redis
    image: redis:6.2
    logging:
      options:
        max-size: "500M"
    restart: unless-stopped
    labels:
      - autoheal=true

  database:
    container_name: immich_postgres
    image: postgres:14
    logging:
      options:
        max-size: "500M"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - ./config/pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    labels:
      - autoheal=true

  immich-proxy:
    container_name: immich_proxy
    image: ghcr.io/immich-app/immich-proxy:${IMMICH_VERSION:-release}
    logging:
      options:
        max-size: "500M"
    environment:
      # Make sure these values get passed through from the env file
      - IMMICH_SERVER_URL
      - IMMICH_WEB_URL
    depends_on:
      - immich-server
    restart: unless-stopped
    ports:
      - "2283:8080"
    labels:
      - autoheal=true
      - "traefik.enable=true"
      - "traefik.http.routers.immich.rule=Host(`immich.${DOMAIN}`)"
      - "traefik.http.routers.immich.tls.certresolver=myresolver"
    healthcheck:
      test: "curl -ILXGET http://localhost:8080"

  backup:
    container_name: immich_db_dumper
    image: prodrigestivill/postgres-backup-local
    env_file:
      - .env
    environment:
      POSTGRES_HOST: database
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      SCHEDULE: "@daily"
      BACKUP_NUM_KEEP: 7
      BACKUP_DIR: /db_dumps
    volumes:
      - $BACKUP_LOCATION:/db_dumps
    depends_on:
      - database

networks:
  default:
    external:
      name: traefik
