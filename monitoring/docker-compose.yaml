version: "3.7"

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    user: "${PUID}:${PGID}"
    logging:
      options:
        max-size: "500M"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/prometheus:/prometheus
    labels:
      - "autoheal=true"
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAIN}`)"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.http.routers.prometheus.middlewares=authentik@file"
#    ports:
#      - "9090:9090"
    healthcheck:
      test: "wget http://localhost:9090 -O /dev/null"
  prometheus-container-updater:
    build: prometheus-container-updater
    restart: unless-stopped
    volumes:
      - ./config/prometheus:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    user: "${PUID}:${PGID}"
    logging:
      options:
        max-size: "500M"
    volumes:
      - ./config/grafana:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
    env_file: .env
    labels:
      - "autoheal=true"
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
    healthcheck:
      test: "curl -ILXGET http://localhost:3000"

networks:
  default:
    external:
      name: traefik
